/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_ki4wangdy_tinyThread_Lock */

#ifndef _Included_com_ki4wangdy_tinyThread_Lock
#define _Included_com_ki4wangdy_tinyThread_Lock
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_ki4wangdy_tinyThread_Lock
 * Method:    nativeId
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_ki4wangdy_tinyThread_Lock_nativeId
  (JNIEnv *, jobject);

/*
 * Class:     com_ki4wangdy_tinyThread_Lock
 * Method:    nativeDestory
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ki4wangdy_tinyThread_Lock_nativeDestory
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ki4wangdy_tinyThread_Lock
 * Method:    nativeLock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ki4wangdy_tinyThread_Lock_nativeLock
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ki4wangdy_tinyThread_Lock
 * Method:    nativeUnLock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ki4wangdy_tinyThread_Lock_nativeUnLock
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_ki4wangdy_tinyThread_Lock
 * Method:    nativeTryLock
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_ki4wangdy_tinyThread_Lock_nativeTryLock
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
